{"ast":null,"code":"var _jsxFileName = \"/root/youtube/Wittcode/connect-react-app-to-express/client/src/components/Users.js\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  //constructor is a class\n  constructor(props) {\n    super(props);\n    //would use useState, but useState can only be used with functional components with hooks. Constructor is a class so we instead use this.state\n    this.state = {\n      users: []\n    };\n  }\n  //invoked immediately after the component is inserted into the DOM, specifically the mounting stage of the React cycle. \n  componentDidMount() {\n    //fetch is a promise. A node module that fetches http request \n    fetch('/api/users')\n    //.json is a javascript response interface that also returns a promise\n    .then(res => res.json()).then(users => {\n      this.setState({\n        users: users\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username \", user.username, \", Age: \", user.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Users;","map":{"version":3,"names":["Component","Users","constructor","props","state","users","componentDidMount","fetch","then","res","json","setState","render","map","user","username","age"],"sources":["/root/youtube/Wittcode/connect-react-app-to-express/client/src/components/Users.js"],"sourcesContent":["import {Component} from 'react';\n\nclass Users extends Component {\n    //constructor is a class\n    constructor(props) {\n        super(props); \n        //would use useState, but useState can only be used with functional components with hooks. Constructor is a class so we instead use this.state\n        this.state = {\n            users: []\n        }\n    }\n    //invoked immediately after the component is inserted into the DOM, specifically the mounting stage of the React cycle. \n    componentDidMount() {\n        //fetch is a promise. A node module that fetches http request \n        fetch('/api/users',)\n            //.json is a javascript response interface that also returns a promise\n            .then(res => res.json())\n            .then(users => {\n                this.setState({users: users});\n            });\n    }\n    render() {\n        return (\n            <ul>\n                {\n                    this.state.users.map(user => (\n                        <li>Username {user.username}, Age: {user.age}</li>\n                    ))\n                }\n            </ul>\n        )\n    }\n}\nexport default Users;"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAAC;AAEhC,MAAMC,KAAK,SAASD,SAAS,CAAC;EAC1B;EACAE,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ;IACA,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EACA;EACAC,iBAAiB,GAAG;IAChB;IACAC,KAAK,CAAC,YAAY;IACd;IAAA,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACH,KAAK,IAAI;MACX,IAAI,CAACM,QAAQ,CAAC;QAACN,KAAK,EAAEA;MAAK,CAAC,CAAC;IACjC,CAAC,CAAC;EACV;EACAO,MAAM,GAAG;IACL,oBACI;MAAA,UAEQ,IAAI,CAACR,KAAK,CAACC,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACrB;QAAA,wBAAcA,IAAI,CAACC,QAAQ,aAASD,IAAI,CAACE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAEb;AACJ;AACA,eAAef,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}