{"ast":null,"code":"var _jsxFileName = \"/root/youtube/Wittcode/connect-react-app-to-express/client/src/components/Users.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  //constructor is a class\n  constructor(props) {\n    super(props);\n    //would use useState, but useState can only be used with functional components with hooks. Constructor is a class so we instead use this.state\n    this.state = {\n      users: []\n    };\n  }\n  //invoked immediately after the component is inserted into the DOM, specifically the mounting stage of the React cycle.\n  componentDidMount() {\n    //fetch is a promise. A node module that fetches http request\n    fetch(\"/api/users\")\n    //.json is a javascript response interface that also returns a promise\n    .then(res => res.json()).then(users => {\n      this.setState({\n        users: users\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username \", user.username, \", Age: \", user.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Users;","map":{"version":3,"names":["Component","Users","constructor","props","state","users","componentDidMount","fetch","then","res","json","setState","render","map","user","username","age"],"sources":["/root/youtube/Wittcode/connect-react-app-to-express/client/src/components/Users.js"],"sourcesContent":["import { Component } from \"react\";\n\nclass Users extends Component {\n  //constructor is a class\n  constructor(props) {\n    super(props);\n    //would use useState, but useState can only be used with functional components with hooks. Constructor is a class so we instead use this.state\n    this.state = {\n      users: [],\n    };\n  }\n  //invoked immediately after the component is inserted into the DOM, specifically the mounting stage of the React cycle.\n  componentDidMount() {\n    //fetch is a promise. A node module that fetches http request\n    fetch(\"/api/users\")\n      //.json is a javascript response interface that also returns a promise\n      .then((res) => res.json())\n      .then((users) => {\n        this.setState({ users: users });\n      });\n  }\n  render() {\n    return (\n      <ul>\n        {this.state.users.map((user) => (\n          <li>\n            Username {user.username}, Age: {user.age}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nexport default Users;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,KAAK,SAASD,SAAS,CAAC;EAC5B;EACAE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EACA;EACAC,iBAAiB,GAAG;IAClB;IACAC,KAAK,CAAC,YAAY;IAChB;IAAA,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEH,KAAK,IAAK;MACf,IAAI,CAACM,QAAQ,CAAC;QAAEN,KAAK,EAAEA;MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;EACN;EACAO,MAAM,GAAG;IACP,oBACE;MAAA,UACG,IAAI,CAACR,KAAK,CAACC,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACzB;QAAA,wBACYA,IAAI,CAACC,QAAQ,aAASD,IAAI,CAACE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAE3C;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAET;AACF;AACA,eAAef,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}